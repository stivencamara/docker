version: "3.9"
services:

  redis:
    restart: always
    image: redis:alpine
    ports:
      - 6379:6379
    networks:
      ces_network:
        ipv4_address: 192.168.1.120

  zookeeper:
    image: bitnami/zookeeper:3.8.1
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: yes
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 10s
      retries: 3
    ports:
      - 22181:2181
    networks:
      ces_network:
        ipv4_address: 192.168.1.121

  kafka1:
    restart: always
    image: bitnami/kafka:3.2.3
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9091
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      BOOTSTRAP_SERVERS: kafka1:9091,kafka2:9092
      ZOOKEEPER: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
    ports:
      - "9091:9091"
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    networks:
      ces_network:
        ipv4_address: 192.168.1.122
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/var/lib/kafka/data

  kafka2:
    restart: always
    image: bitnami/kafka:3.2.3
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      BOOTSTRAP_SERVERS: kafka1:9091,kafka2:9092
      ZOOKEEPER: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
    ports:
      - "9092:9092"
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
    networks:
      ces_network:
        ipv4_address: 192.168.1.123
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/var/lib/kafka/data
  
  sqlserver:
    restart: always
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=P@ssw0rd
    ports:
      - "1433:1433"
    volumes:
      - sqlsystem_data:/var/opt/mssql/
      - sqldata_data:/var/opt/sqlserver/data
      - sqllog_data:/var/opt/sqlserver/log
      - sqlbackup_data:/var/opt/sqlserver/backup
    networks:
      ces_network:
        ipv4_address: 192.168.1.124
    deploy:
        resources:
            limits:
                memory: 2048M

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_STACK_VERSION}
    networks:
      ces_network:
        ipv4_address: 192.168.1.125
    environment:
      discovery.type: single-node
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      xpack.license.self_generated.type: basic
      bootstrap.memory_lock: true
      xpack.security.enabled: false
      xpack.security.http.ssl.enabled: false
      xpack.security.transport.ssl.enabled: false
      #ES_JAVA_OPTS: -Xms2g -Xmx2g
      #xpack.monitoring.enabled: "true"
      network.publish_host: 
    ports:
      - 9200:9200
      - 9300:9300
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:${KIBANA_STACK_VERSION}
    networks:
      ces_network:
        ipv4_address: 192.168.1.126
    depends_on:
      - elasticsearch
    #     condition: service_healthy
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      SERVERNAME: kibana
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: ${KIBANA_PASSWORD}
    mem_limit: ${MEM_LIMIT}
    volumes:
      - kibana_data:/usr/share/kibana/data

volumes:
  zookeeper_data:
  kafka_data:
  sqlserver_data:
  sqlsystem_data:
  sqldata_data:
  sqllog_data:
  sqlbackup_data:
  es_data:
  kibana_data:
  kong_data:

networks:
  ces_network:
    # external: true
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.1.0/24
          gateway: 192.168.1.1

      