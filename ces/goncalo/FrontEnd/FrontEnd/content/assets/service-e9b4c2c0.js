import{b as s,u as n,v as a}from"./index-ecfd29ec.js";const d={search:e=>{let r=e.serviceCategoryIds;e.serviceSubCategoryIds!=null&&(r=r.concat(e.serviceSubCategoryIds));let t={serviceCategoryIds:r,pageNumber:e.pageNumber,sortBy:e.sortBy,code:e.code,serviceTypeIds:e.serviceTypeIds,businessEventIds:e.businessEventIds,lifeEventIds:e.lifeEventIds,abreviation:e.abreviation,name:e.name,organization:e.organization,recordStateIds:e.recordStateIds,active:e.active};return s.post("/service/search",t)},create:e=>s.post("/service",e),update:e=>{let r=n.cloneObject(e);return e.serviceSubCategoryId!=null&&(r.serviceCategoryId=e.serviceSubCategoryId),s.put("/service",r)},delete:(e,r)=>s.delete(`/service/${e}/${r}`),getLists:(e,r=!0)=>{const t={lang:e,onlyPublishState:r};return s.post("/service/lists",t)},getById:(e,r)=>s.get(`/service/${e}/${r}`),submit:(e,r)=>{let t={serviceId:e,serviceVersion:r,recordStateId:a.recordStateType.submitted};return s.put("/service/changestate",t)},publish:(e,r)=>{let t={serviceId:e,serviceVersion:r,recordStateId:a.recordStateType.published};return s.put("/service/changestate",t)},changeStateToDraft:(e,r)=>{let t={serviceId:e,serviceVersion:r,recordStateId:a.recordStateType.draft};return s.put("/service/changestate",t)},changeState:(e,r,t,c=null,i="")=>{let o={serviceId:e,serviceVersion:r,recordStateId:t,overrideDuplicate:c,refusal:i};return s.put("/service/changestate",o)},associationSearch:e=>s.post("/service/association/search",e),associationCreate:(e,r,t,c)=>{let i={serviceId:e,serviceVersion:r,pointOfCareId:t,pointOfCareVersion:c};return s.post("/service/association/add",i)},associationRemove:(e,r,t,c)=>{let i={serviceId:e,serviceVersion:r,pointOfCareId:t,pointOfCareVersion:c};return s.post("/service/association/remove",i)},associationApprove:e=>s.post("/service/association/approve",e),history:e=>{let r={serviceId:e};return s.post("/service/history",r)},checklist:()=>s.get("/service/checklist"),extinct:(e,r,t)=>{let c={serviceId:e,serviceVersion:r,recordStateId:a.recordStateType.extinct,endDate:t};return s.put("/service/changestate",c)},clone:(e,r)=>{let t={serviceId:e,serviceVersion:r};return s.post("/service/clone",t)}};export{d as s};
