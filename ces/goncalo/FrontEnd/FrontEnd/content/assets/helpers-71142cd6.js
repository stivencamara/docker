import{s as e,i as d,u as l}from"./index-a14ad215.js";import{c as o,r as b,s as h,a as f,e as T}from"./index.esm-88a1129f.js";const q=[{value:e.recordStateType.approval,class:e.badgeType.primary},{value:e.recordStateType.archived,class:e.badgeType.light},{value:e.recordStateType.draft,class:e.badgeType.info},{value:e.recordStateType.obsolete,class:e.badgeType.secondary},{value:e.recordStateType.extinct,class:e.badgeType.secondary},{value:e.recordStateType.returned,class:e.badgeType.danger},{value:e.recordStateType.notApplicable,class:e.badgeType.danger},{value:e.recordStateType.published,class:e.badgeType.success},{value:e.recordStateType.submitted,class:e.badgeType.warning}],m=[{value:e.userStatusOptions.active,class:e.badgeType.primary},{value:e.userStatusOptions.blocked,class:e.badgeType.warning},{value:e.userStatusOptions.deleted,class:e.badgeType.danger},{value:e.userStatusOptions.inactive,class:e.badgeType.danger}],k={recordStateTypeBadgeOptions:q,userStatusBadgeOptions:m,contactsFormRules(){return{contactScopeId:{required:this.requiredMessage()},contactTypeId:{required:this.requiredMessage()},contactValue:{required:this.requiredMessage()}}},forEachByName(t){return o.forEach({[t]:{requiredIfFunction:this.requiredIfMessage()}})},forEachField(t,a=null){let n={};a===null&&(a=e.language.pt);for(let c in t)n[t[c]]={requiredIfFunction:this.requiredIfMessage(a)};return o.forEach(n)},forEachFieldEng(t,a=null){let n={};for(let c in t)n[t[c]]={requiredIfFunction:this.requiredMessage()};return o.forEach(n)},requiredMessage(){const t=d();return o.withMessage(t.common.requiredField,b)},sameAs(t,a){const n=d();return o.withMessage(n.common.sameAsField.replace("{0}",n.label[a]),h(t))},requiredMessageWithDependency(t,a=null){const n=d();return o.withMessage(n.common.requiredField,f((c,s)=>{let r=t.split(".");if(r.length===1)return a?s[r[0]]!==a:s[r[0]];if(r.length===2)return a?s[r[0]][r[1]]!==a:s[r[0]][r[1]];if(r.length===3)return a?s[r[0]][r[1]][r[2]]!==a:s[r[0]][r[1]][r[2]]}))},requiredMessageWithDependencyArray(t,a=[]){const n=d();return o.withMessage(n.common.requiredField,f((c,s)=>{let r=t.split(".");if(r.length===1)return a.length?s[r[0]]:a.cotains(s[r[0]]);if(r.length===2)return a.length?s[r[0]][r[1]]:a.cotains(s[r[0]][r[1]]);if(r.length===3)return a.length?s[r[0]][r[1]][r[2]]:a.cotains(s[r[0]][r[1]][r[2]])}))},emailMessage(){const t=d();return o.withMessage(t.common.emailField,T)},requiredIfMessage(t){const a=d();return o.withMessage(a.common.requiredField,f((n,c)=>this.checkIfIsRequired(n,c,t)))},checkIfIsRequired(t,a,n){return a.language===n},getFieldByLangAndName(t,a,n,c="texts"){let s=t[c].filter(r=>r.language===a);return s.length?s[0][n]:null},setFieldByLangAndName(t,a,n,c,s="texts"){t[s].forEach(r=>{r.language===a&&(r[n]=c)})},getLabel(t,a){const n=t.find(c=>c.value===a);return n?n.label:null},calculatePercentage(t,a,n){let c=0;for(let u in a)c=r(c,a[u]);const s=Math.round(c*100/a.length);n(s);function r(u,g){const i=p(t,g);return i==null?u:i?u+1:u}function p(u,g){const i=g.split(".");let y=null;return i.length===1?u[i[0]]:i.length===2?u[i[0]][i[1]]:i.length===3?(i[0]==="texts"&&l.sortArrayOffline("language desc",u.texts),u[i[0]][i[1]][i[2]]):y}},getAddressRules(){return{address:{zipCode:{required:this.requiredMessage()},islandId:{required:this.requiredMessage()},countyId:{required:this.requiredMessage()},parishId:{required:this.requiredMessage()},locality:{required:this.requiredMessage()},address:{required:this.requiredMessage()}}}},getMessage(t,a,n){const s=`${this.getObject(n)}Success`;switch(a){case e.recordStateType.archived:return t.backoffice.tasks.archived[s];case e.recordStateType.submitted:return t.backoffice.tasks.submitted[s];case e.recordStateType.draft:return t.backoffice.tasks.draft[s];case e.recordStateType.approval:return t.backoffice.tasks.approval[s];case e.recordStateType.published:return t.backoffice.tasks.published[s];case e.recordStateType.returned:return t.backoffice.tasks.returned[s];case e.recordStateType.obsolete:return t.backoffice.tasks.obsolete[s];case e.recordStateType.extinct:return t.backoffice.tasks.extinct[s];default:return null}},getObject(t){switch(t){case e.objectType.organization:return l.getPropertyNameByValue(e.objectType,e.objectType.organization);case e.objectType.pointOfCare:return l.getPropertyNameByValue(e.objectType,e.objectType.pointOfCare);case e.objectType.service:return l.getPropertyNameByValue(e.objectType,e.objectType.service);case e.objectType.document:return l.getPropertyNameByValue(e.objectType,e.objectType.document);default:return null}},getObjecTypeId(t){const a=["organizationId","serviceId","pointOfCareId","locationId","documentId"];for(const c in a){let s=n(a[c]);if(s!==e.objectType.notApplicable)return s}return e.objectType.notApplicable;function n(c){const r=Object.keys(t).find(p=>p===c);if(r)switch(r){case"organizationId":return e.objectType.organization;case"serviceId":return e.objectType.service;case"pointOfCareId":return e.objectType.pointOfCare;case"locationId":return e.objectType.location;case"documentId":return e.objectType.document}return e.objectType.notApplicable}}};export{k as b};
